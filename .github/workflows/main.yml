name: 'Terraform AKS Deployment'

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 'Initialize Terraform'
        run: terraform init

      - name: 'Validate Terraform'
        run: terraform validate

      - name: 'Plan Terraform'
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/aks-set-context@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
          kubectl get nodes
          
      - name: Install Helm
        id: install-helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.7.0'  # Specify the Helm version if needed

      - name: Add Helm repo for ingress-nginx
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Install NGINX Ingress Controller
        run: |
          helm install nginx-ingress ingress-nginx/ingress-nginx \
            --namespace ingress --create-namespace \
            --set controller.replicaCount=2 \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux
          kubectl get namespace

      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve

      # Commented out the Apply step
      # - name: 'Apply Terraform'
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -input=false -auto-approve tfplan
